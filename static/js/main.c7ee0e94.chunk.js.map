{"version":3,"sources":["context/QuizContext.jsx","components/main/Main.jsx","components/logo/Logo.jsx","components/title/Title.jsx","context/TimerContext.jsx","components/timer/Timer.jsx","db/QuizData.jsx","components/quiz/Quiz.jsx","App.js","reportWebVitals.js","index.js"],"names":["QuizContext","createContext","QuizProvider","props","useState","isStarted","isFinished","number","score","correctAnswer","questions","quiz","setQuizContext","Provider","value","children","Main","useContext","className","data-cy","onClick","e","goHome","startGame","question","answerOne","handleAnswer","answerTwo","answerThree","answerFour","dataclassName","Logo","Title","TimerContext","TimerProvider","seconds","isActive","counter","setCounterContext","Timer","setCounter","useEffect","timer","setInterval","console","log","clearTimeout","Questions","Quiz","startClass","resultsBtnClass","welcomeClass","QuestionCorrect","length","QuestionIncorrect","QuestionObj","Object","values","shuffledAnswers","answersArray","incorrect","concat","correct","i","j","Math","floor","random","temp","shuffleAnswers","preventDefault","selectedButton","target","correctCheck","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7ee0e94.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const QuizContext = createContext();\n\nexport const QuizProvider = props => {\n\n    const [quiz, setQuizContext] = useState(\n        {\n            isStarted: false,\n            isFinished: false,\n            number: 0,\n            score: 'Q',\n            correctAnswer: true,\n            questions: [\n                {\n                  \"question\": \"What is the secret to the universe?\",\n                  \"incorrect\": [\"Chocolate\", \"Dark Matter\", \"Gravity\"],\n                  \"correct\": \"42\"\n                },\n                {\n                  \"question\": \"In Shakespeare's play Julius Caesar, Caesar's last words were...\",\n                  \"incorrect\": [\"Iacta alea est!\", \"Vidi, vini, vici\", \"Aegri somnia vana\"],\n                  \"correct\": \"Et tu, Brute?\"\n                },\n                {\n                  \"question\": \"A group of tigers are referred to as:\",\n                  \"incorrect\": [\"Chowder\", \"Pride\", \"Destruction\"],\n                  \"correct\": \"Ambush\"\n                },\n                {\n                  \"question\": \"What is the top speed an average cat can travel?\",\n                  \"incorrect\": [\"42 mph\", \"13 mph\", \"9 mph\"],\n                  \"correct\": \"31 mph\"\n                },\n                {\n                  \"question\": \"A cat can jump to _____ times its own height:\",\n                  \"incorrect\": [\"3\", \"9\", \"7\"],\n                  \"correct\": \"5\"\n                },\n                {\n                  \"question\": \"What is the only letter that doesn't appear in a US state name?\",\n                  \"incorrect\": [\"M\", \"Z\", \"X\"],\n                  \"correct\": \"Q\"\n                },\n                {\n                  \"question\": \"What is the name for a cow-bison hybrid?\",\n                  \"incorrect\": [\"Cowson\", \"Bicow\", \"Mooson\"],\n                  \"correct\": \"Beefalo\"\n                },\n                {\n                  \"question\": \"What is the largest freshwater lake in the world?\",\n                  \"incorrect\": [\"Lake Baikal\", \"Lake Michigan\", \"Lake Victoria\"],\n                  \"correct\": \"Lake Superior\"\n                },\n              \n                {\n                  \"question\": \"In a website address bar, what does WWW stand for?\",\n                  \"incorrect\": [\"Wild Wild West\", \"War World Web\"],\n                  \"correct\": \"World Wide Web\"\n                },\n                {\n                  \"question\": \"In a game of bingo, what number is represented by the name two little ducks?\",\n                  \"incorrect\": [\"20\", \"55\", \"77\"],\n                  \"correct\": \"22\"\n                },\n                {\n                  \"question\": \"According to Greek mythology, who was the first woman on Earth?\",\n                  \"incorrect\": [\"Lilith\", \"Eve\", \"Hera\"],\n                  \"correct\": \"Pandora\"\n                },\n                {\n                  \"question\": \"In which European city would you find Orly airport?\",\n                  \"incorrect\": [\"London\", \"Belgium\", \"Munich\"],\n                  \"correct\": \"Paris\"\n                },\n                {\n                  \"question\": \"Where would you find the Sea of Tranquility?\",\n                  \"incorrect\": [\"California\", \"Siberia\", \"China\"],\n                  \"correct\": \"The Moon\"\n                },\n                {\n                  \"question\": \"Which artist painted 'Girl with a Pearl Earrin'?\",\n                  \"incorrect\": [\"Van Gogh\", \"Picasso\", \"Da Vinci\"],\n                  \"correct\": \"Vermeer\"\n                },\n                {\n                  \"question\": \"What is the official name for the 'hashtag' symbol?\",\n                  \"incorrect\": [\"Number sign\", \"Hash Sign\", \"Pound\"],\n                  \"correct\": \"Octothorpe\"\n                },\n                {\n                  \"question\": \"Not American at all, where is apple pie from?\",\n                  \"incorrect\": [\"Japan\", \"Ethiopia\", \"Canada\"],\n                  \"correct\": \"England\"\n                },\n                {\n                  \"question\": \"What is the national animal of Scotland?\",\n                  \"incorrect\": [\"Bear\", \"Rabbit\", \"Seal\"],\n                  \"correct\": \"Unicorn\"\n                },\n                {\n                  \"question\": \"Where in the world is the only place where Canada is *due south*\",\n                  \"incorrect\": [\"Alaska\", \"Russia\", \"Washington\"],\n                  \"correct\": \"Detroit\"\n                },\n                {\n                  \"question\": \"Approximately how many grapes go into a bottle of wine?\",\n                  \"incorrect\": [\"500\", \"200\", \"1000\"],\n                  \"correct\": \"700\"\n                },\n                {\n                  \"question\": \"How much does a US One Dollar Bill cost to make?\",\n                  \"incorrect\": [\"$0.25\", \"$1\", \"$5\"],\n                  \"correct\": \"$0.05\"\n                },\n                {\n                  \"question\": \"The Vatican bank has the only ATM in the world that allows users to do what?\",\n                  \"incorrect\": [\"Receive withdrawls in rosary beads\", \"Vote for the Pope\", \"Purchase indulgences\"],\n                  \"correct\": \"Perform transactions in Latin\"\n                }\n            ],\n        },\n    );\n\n    return ( \n        <QuizContext.Provider value={[quiz, setQuizContext]}>\n            {props.children}\n        </QuizContext.Provider>\n     );\n\n}","import React, { useContext } from \"react\";\nimport { QuizContext } from '../../context/QuizContext';\nimport \"../../styles/app.css\";\n\nconst Main = props => {\n\n    const [quiz] = useContext(QuizContext);\n\n    // Handle Message To User When Quiz Finished\n\n    const handleMessage = () => {\n        if (quiz.score <= 60) {\n            return (\"¯¯\\\\_(ツ)_/¯¯\")\n        };\n        if (quiz.score >= 70 && quiz.score < 100 ) {\n            return (\"Great job!\")\n        };\n        if (quiz.score >= 100) {\n            return (\"Super Hero Like!!!\")\n        };\n    }\n\n    // Show Instructions\n\n    if (!quiz.isStarted && !quiz.isFinished) {\n        return (\n            <div className=\"main flex justify-center items-center\">\n                <div className=\"antialiased sm:w-2/3 lg:w-1/2\">\n                    <h1 dataclassName=\"antialiased text-center my-4 sm:text-xl text-2xl\">Welcome to Quizzy!</h1>\n                    <h2 className=\"sm:text-lg text-xl my-4\">What is Quizzy?</h2>\n                    <hr></hr>\n                    <h3 className=\"sm:text-md my-4 leading-7\">Quizzy is a simple quiz app built using React. Quizzy allows users to track their score as they work through the provided questions. Answers are provided in multiple-choice format and correct answers are provided when answered incorrectly. The pressure is on with the addition of a 35-second timer! And the stakes are high with point deductions for every incorrect answer.</h3>\n\n                    <h2 className=\"my-4 text-xl\">How to Play</h2>\n                    <ul className=\"sm:text-sm my-4 leading-7\">\n                        <li>You will have 35 seconds to complete the quiz.</li>\n                        <li>A countdown timer (top-right) will help you keep track.</li>\n                        <li>You will earn 10 points for every question you answer correctly.</li>\n                        <li>You will lose 10 points for every question you get wrong.</li>\n\n                    </ul>\n                    <hr></hr>\n                    <p className=\"my-4\">Challenge: Score Over 100 Points!</p>\n                    <hr></hr>\n                    <div className=\"flex justify-center p-4\">\n                        <button data-cy=\"play\" className=\"btn\" onClick={(e) => {props.startGame(e)}}>Play</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    // Show Quiz\n\n    if (!quiz.isFinished) {\n        return (\n            <div className=\"main flex justify-center items-center\">\n                <div className=\"m-8\">\n                    <div className=\"sm:text-base lg:text-5xl text-center pb-4\">\n                        {props.question}\n                    </div>\n                    <div className=\"grid sm:grid-cols-1 lg:grid-cols-2\">\n                        <button data-cy=\"answer-a\" className=\"btn sm:w-2/3 sm:px-4 sm:py-2 lg:px-12 lg:py-12 sm:text-base lg:text-3xl sm:justify-self-center lg:justify-self-end\" value={props.answerOne} onClick={(e) => {props.handleAnswer(e)}}>{props.answerOne}</button>\n                        <button data-cy=\"answer-b\" className=\"btn sm:w-2/3 sm:px-4 sm:py-2 lg:px-12 lg:py-12 sm:text-base lg:text-3xl sm:justify-self-center lg:justify-self-start\" value={props.answerTwo} onClick={(e) => {props.handleAnswer(e)}}>{props.answerTwo}</button>\n                        <button data-cy=\"answer-c\" className=\"btn sm:w-2/3 sm:px-4 sm:py-2 lg:px-12 lg:py-12 sm:text-base lg:text-3xl sm:justify-self-center lg:justify-self-end\" value={props.answerThree} onClick={(e) => {props.handleAnswer(e)}}>{props.answerThree}</button>\n                        <button data-cy=\"answer-d\" className=\"btn sm:w-2/3 sm:px-4 sm:py-2 lg:px-12 lg:py-12 sm:text-base lg:text-3xl sm:justify-self-center lg:justify-self-start\" value={props.answerFour} onClick={(e) => {props.handleAnswer(e)}}>{props.answerFour}</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    // Show Scoreboard\n\n    if (quiz.isFinished) {\n\n        return (\n            <div className=\"main flex justify-center items-center\">\n                <div className=\"text-center m-8\"> \n                    <div className=\"text-6xl m-8\">\n                        <h1>{handleMessage()}</h1>\n                        <p>{quiz.score}</p>\n                        <h1>Points</h1>\n                    </div>\n                    <div className=\"flex justify-center\">\n                        <button data-cy=\"home\" className=\"btn m-4\" onClick={(e) => {props.goHome(e)}}>Home</button>\n                        <button data-cy=\"restart\" className=\"btn m-4\" onClick={(e) => {props.startGame(e)}}>Restart</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default Main;","import React, { useContext } from \"react\";\nimport { QuizContext } from '../../context/QuizContext';\nimport '../../styles/app.css';\n\nconst Logo = props => {\n    \n    const [quiz] = useContext(QuizContext);\n\n    return ( \n        <header>\n            <div className=\"logo font-body text-5xl mx-4 flex items-center\">\n                <div data-cy=\"point-check\" className={!quiz.isStarted ? `` : `animate-pulse`}>{quiz.score}</div>\n            </div>\n        </header>\n     );\n}\n \nexport default Logo;","import '../../styles/app.css';\n\nconst Title = () => {\n    \n    return ( \n        <div className=\"title font-body text-4xl flex justify-center items-center\">Quizzy</div>\n     );\n}\n \nexport default Title;","import React, { useState, createContext } from \"react\";\n\nexport const TimerContext = createContext();\n\nexport const TimerProvider = props => {\n\n    const [counter, setCounterContext] = useState(\n        {\n            seconds: 35,\n            isActive: false\n        }\n    );\n\n    return ( \n        <TimerContext.Provider value={[counter, setCounterContext]}>\n            {props.children}\n        </TimerContext.Provider>\n     );\n\n}","import React, { useContext, useEffect } from \"react\";\nimport { TimerContext } from '../../context/TimerContext';\nimport { QuizContext } from '../../context/QuizContext';\nimport '../../styles/app.css';\n\nexport const Timer = props => {\n    \n    const [counter, setCounter] = useContext(TimerContext);\n    const [quiz, setQuizContext] = useContext(QuizContext);\n    \n\n    // Handle Timer \n\n    useEffect(() => {\n        \n        // Reset Timer When Quiz Finished \n\n        if (quiz.isFinished) {\n            setCounter({seconds: 35, isActive: true});\n        }\n\n        // Set Timer When Quiz Starts\n\n        if (quiz.isStarted && !quiz.isFinished) {\n\n            // Set the Timer\n\n            const timer = counter.seconds >= 1 && setInterval(() => setCounter({seconds: counter.seconds - 1, isActive: true}), 1000);\n            console.log(counter.seconds);\n\n        if (counter.seconds < 1) {\n\n            // Reset the Timer If Time Runs Out\n            // Show Scoreboard by Setting Counter and Quiz Context\n\n            setQuizContext({isStarted: false, isFinished: true, number: 0, score: 0, correctAnswer: true,  questions: quiz.questions});\n            setCounter({seconds: '', isActive: false});\n\n            function showScoreboard() {\n                \n                setCounter({seconds: 35, isActive: false});\n                setQuizContext({isStarted: false, isFinished: true, number: 0, score: quiz.score, correctAnswer: true,  questions: quiz.questions});\n            }\n            showScoreboard();\n        };\n        return () => \n            clearTimeout(timer);\n        }\n    }, [setQuizContext, quiz.questions, quiz.score, quiz.isStarted, setCounter, counter.seconds, counter.isActive, quiz.isFinished, quiz.number]);\n\n    return ( \n            <div className=\"timer font-body flex justify-end items-center pr-4 text-5xl\">\n                {/* className={`${counter.isActive}` ? `${styles.timer}` : `${styles.hide}`} */}\n                <div data-cy=\"time-check\" className={!quiz.isStarted ? `` : `animate-pulse`}>{counter.seconds}</div>\n            </div>\n     );\n}\n\nexport default Timer;","const Questions = [\n  {\n    \"question\": \"What is the secret to the universe?\",\n    \"incorrect\": [\"Chocolate\", \"Dark Matter\", \"Gravity\"],\n    \"correct\": \"42\"\n  },\n  {\n    \"question\": \"In Shakespeare's play Julius Caesar, Caesar's last words were...\",\n    \"incorrect\": [\"Iacta alea est!\", \"Vidi, vini, vici\", \"Aegri somnia vana\"],\n    \"correct\": \"Et tu, Brute?\"\n  },\n  {\n    \"question\": \"A group of tigers are referred to as:\",\n    \"incorrect\": [\"Chowder\", \"Pride\", \"Destruction\"],\n    \"correct\": \"Ambush\"\n  },\n  {\n    \"question\": \"What is the top speed an average cat can travel?\",\n    \"incorrect\": [\"42 mph\", \"13 mph\", \"9 mph\"],\n    \"correct\": \"31 mph\"\n  },\n  {\n    \"question\": \"A cat can jump to _____ times its own height:\",\n    \"incorrect\": [\"3\", \"9\", \"7\"],\n    \"correct\": \"5\"\n  },\n  {\n    \"question\": \"What is the only letter that doesn't appear in a US state name?\",\n    \"incorrect\": [\"M\", \"Z\", \"X\"],\n    \"correct\": \"Q\"\n  },\n  {\n    \"question\": \"What is the name for a cow-bison hybrid?\",\n    \"incorrect\": [\"Cowson\", \"Bicow\", \"Mooson\"],\n    \"correct\": \"Beefalo\"\n  },\n  {\n    \"question\": \"What is the largest freshwater lake in the world?\",\n    \"incorrect\": [\"Lake Baikal\", \"Lake Michigan\", \"Lake Victoria\"],\n    \"correct\": \"Lake Superior\"\n  },\n\n  {\n    \"question\": \"In a website address bar, what does WWW stand for?\",\n    \"incorrect\": [\"Wild Wild West\", \"War World Web\"],\n    \"correct\": \"World Wide Web\"\n  },\n  {\n    \"question\": \"In a game of bingo, what number is represented by the name two little ducks?\",\n    \"incorrect\": [\"20\", \"55\", \"77\"],\n    \"correct\": \"22\"\n  },\n  {\n    \"question\": \"According to Greek mythology, who was the first woman on Earth?\",\n    \"incorrect\": [\"Lilith\", \"Eve\", \"Hera\"],\n    \"correct\": \"Pandora\"\n  },\n  {\n    \"question\": \"In which European city would you find Orly airport?\",\n    \"incorrect\": [\"London\", \"Belgium\", \"Munich\"],\n    \"correct\": \"Paris\"\n  },\n  {\n    \"question\": \"Where would you find the Sea of Tranquility?\",\n    \"incorrect\": [\"California\", \"Siberia\", \"China\"],\n    \"correct\": \"The Moon\"\n  },\n  {\n    \"question\": \"Which artist painted 'Girl with a Pearl Earrin'?\",\n    \"incorrect\": [\"Van Gogh\", \"Picasso\", \"Da Vinci\"],\n    \"correct\": \"Vermeer\"\n  },\n  {\n    \"question\": \"What is the official name for the 'hashtag' symbol?\",\n    \"incorrect\": [\"Number sign\", \"Hash Sign\", \"Pound\"],\n    \"correct\": \"Octothorpe\"\n  },\n  {\n    \"question\": \"Not American at all, where is apple pie from?\",\n    \"incorrect\": [\"Japan\", \"Ethiopia\", \"Canada\"],\n    \"correct\": \"England\"\n  },\n  {\n    \"question\": \"What is the national animal of Scotland?\",\n    \"incorrect\": [\"Bear\", \"Rabbit\", \"Seal\"],\n    \"correct\": \"Unicorn\"\n  },\n  {\n    \"question\": \"Where in the world is the only place where Canada is *due south*\",\n    \"incorrect\": [\"Alaska\", \"Russia\", \"Washington\"],\n    \"correct\": \"Detroit\"\n  },\n  {\n    \"question\": \"Approximately how many grapes go into a bottle of wine?\",\n    \"incorrect\": [\"500\", \"200\", \"1000\"],\n    \"correct\": \"700\"\n  },\n  {\n    \"question\": \"How much does a US One Dollar Bill cost to make?\",\n    \"incorrect\": [\"$0.25\", \"$1\", \"$5\"],\n    \"correct\": \"$0.05\"\n  },\n  {\n    \"question\": \"The Vatican bank has the only ATM in the world that allows users to do what?\",\n    \"incorrect\": [\n      \"Receive withdrawls in rosary beads\",\n      \"Vote for the Pope\",\n      \"Purchase indulgences\"\n    ],\n    \"correct\": \"Perform transactions in Latin\"\n  }\n]\n\nexport default Questions\n\n// const questions = [\n//   {\n//       question: 'The \"object model\" has all but the following:', \n//       answers: [\n//           {text: 'Properties', correct: false}, \n//           {text: 'Methods', correct: false},\n//           {text: 'Signals', correct: true},\n//           {text: 'Events', correct: false},\n//       ]\n//   }, \n//   {\n//       question: 'What is my favorite color?', \n//       answers: [\n//           {text: 'Red', correct: false}, \n//           {text: 'Green', correct: false},\n//           {text: 'Blue', correct: true},\n//           {text: 'Yellow', correct: false},\n//       ]\n//   },\n//   {\n//       question: 'Which of the following is NOT one of the three common languages used to create web pages?', \n//       answers: [\n//           {text: 'Python', correct: true}, \n//           {text: 'CSS', correct: false},\n//           {text: 'HTML', correct: false},\n//           {text: 'JavaScript', correct: false},\n//       ]\n//   },\n//   {\n//       question: 'What is the proper tag used to comment out HTML code?', \n//       answers: [\n//           {text: '/* /', correct: false}, \n//           {text: '<!-- -->', correct: true},\n//           {text: '**== ==**', correct: false},\n//           {text: '^^_ _^^', correct: false},\n//       ]\n//   },\n// ]\n","import React, { useContext, useState } from \"react\";\nimport Main from '../main/Main';\nimport Logo from '../logo/Logo';\nimport Title from '../title/Title';\nimport Timer from '../timer/Timer';\nimport Questions from '../../db/QuizData';\nimport { QuizContext } from '../../context/QuizContext';\nimport '../../styles/app.css';\n\nconst Quiz = () => {\n    \n    const [quiz, setQuizContext] = useContext(QuizContext);\n    const [startClass] = useState(true);\n    const [resultsBtnClass] = useState(false);\n    const [welcomeClass] = useState(true);\n\n    // Start the Game\n\n    function startGame(e) {\n        e.preventDefault();\n        console.log(quiz.number);\n        setQuizContext({isStarted: true, isFinished: false, number: 0, score: 0, correctAnswer: true,  questions: Questions});\n    }\n\n    // Handle the User-Selected Answer\n\n    const handleAnswer = (e) => {\n        console.log(\"This is the number you're on: \" + quiz.number);\n        console.log(\"This is the length of questions: \" + quiz.questions.length)\n        const selectedButton = e.target.value;\n        const correctCheck = Object.values(QuestionObj)[2];\n        console.log(correctCheck);\n        if (selectedButton === correctCheck) {\n            console.log(\"Your Score Is: \" + quiz.score)\n            console.log(\"Your Number Is: \" + quiz.number)\n            console.log(\"Your Quiz Has This Many Questions: \" + quiz.questions.length)\n            QuestionCorrect();\n        } else {\n            alert(\"Sorry, the correct answer is: \" + correctCheck);\n            QuestionIncorrect();\n        };\n    }\n\n    // Handle If Question Answered Correctly\n\n    const QuestionCorrect = () => {\n        if (quiz.number === quiz.questions.length - 1) {\n            setQuizContext({isStarted: false, isFinished: true, number: 0, score: quiz.score, correctAnswer: true,  questions: Questions});\n        } else {\n            setQuizContext({isStarted: true, isFinished: false, number: quiz.number + 1, score: quiz.score + 10, correctAnswer: true, questions: Questions});\n        }\n    }\n\n    // Handle If Question Answered Incorrectly\n\n    const QuestionIncorrect = () =>  {\n        if (quiz.number === quiz.questions.length - 1) {\n            setQuizContext({isStarted: false, isFinished: true, number: 0, score: quiz.score, correctAnswer: true,  questions: Questions});\n        } else {\n            setQuizContext({isStarted: true, isFinished: false, number: quiz.number + 1, score: quiz.score - 10, correctAnswer: true, questions: Questions});\n        }\n    }\n\n    // Concatonate Answers Then Shuffle Them Using Fisher-Yates Algorithm\n\n    const QuestionObj = Object.values(quiz.questions)[quiz.number];\n\n    const shuffleAnswers = () => {\n        let answersArray = (QuestionObj.incorrect.concat(QuestionObj.correct));\n        console.log(answersArray);\n        for (let i = answersArray.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            const temp = answersArray[i];\n            answersArray[i] = answersArray[j];\n            answersArray[j] = temp;\n            console.log(temp);\n        }\n        return answersArray;\n    }\n\n    // Store Answers in New Array For Use As Props In Render\n\n    const shuffledAnswers = shuffleAnswers();\n\n    // Go Back To Home Page\n\n    function goHome(e) {\n        e.preventDefault();\n        setQuizContext({isStarted: false, isFinished: false, number: 0, score: 'Q', correctAnswer: true,  questions: Questions});\n        \n    }\n\n    return ( \n        <div className=\"appGrid\">\n                <Main \n                    welcomeClass={welcomeClass}\n                    startClass={startClass}\n                    startGame={startGame}\n                    resultsBtnClass={resultsBtnClass}\n                    question={QuestionObj.question}\n                    answerOne={shuffledAnswers[0]}\n                    answerTwo={shuffledAnswers[1]}\n                    answerThree={shuffledAnswers[2]}\n                    answerFour={shuffledAnswers[3]}\n                    handleAnswer={handleAnswer}\n                    correctAnswer={quiz.correctAnswer}\n                    goHome={goHome}\n                />  \n            <Logo />\n            <Title />\n            <Timer />\n        </div>\n     );\n}\n\nexport default Quiz;","import React from \"react\";\nimport Quiz from './components/quiz/Quiz';\nimport { TimerProvider }  from \"./context/TimerContext\";\nimport { QuizProvider }  from \"./context/QuizContext\";\nimport \"./styles/app.css\"\n\nconst App = () =>  {\n\n  return (\n    <QuizProvider>\n      <TimerProvider>\n          <Quiz />\n      </TimerProvider>\n    </QuizProvider>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}